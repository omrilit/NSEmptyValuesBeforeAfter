/** * Â© 2015 NetSuite Inc.  User may not copy, modify, distribute, or re-bundle or otherwise make available this code. */ Ext4.define('PSA.RA.Model.GridResource', {    extend : 'Sch.model.Resource',    fields : [        {            name : 'details',            type : Ext4.data.Types.AUTO        }, {            name : 'expanded',            type : Ext4.data.Types.BOOLEAN,            defaultValue : true        }    ],    getPTMResourceID : function() {        return this.getId().split('~')[0];    },    getPTMProjectID : function() {        return this.getId().split('~')[1];    },    getPTMTaskID : function() {        return this.getId().split('~')[2];    },    isResourceRow : function() {        return this.getId().split('~').length == 1;    }});Ext4.define('PSA.RA.Model.GridAllocation', {    extend : 'Sch.model.Event',    clientIdProperty : 'clientId',    fields : [        {            name : 'StartDate',            type : 'date',            dateFormat : 'Y-m-d',            convert : function(v, j) {                return Ext4.Date.clearTime(new Date(v));            }        }, {            name : 'EndDate',            type : 'date',            dateFormat : 'Y-m-d',            convert : function(v, j) {                return Ext4.Date.clearTime(new Date(v));            }        }, {            name : 'trueEndDate',            type : 'date',            dateFormat : 'Y-m-d',            convert : function(v, j) {                return Ext4.Date.clearTime(new Date(v));            }        }, {            name : 'serviceItem',            type : 'string'        }, {            name : 'units',            type : 'float'        }, {            name : 'unitCost',            type : 'float'        }, {            name : 'unitPrice',            type : 'float'        }, {            name : 'estimatedHours',            type : 'float'        }, {            name : 'actualHours',            type : 'float',            convert : function(v, j) {                return Ext4.util.Format.number(v, '0.00');            }        }, {            name : 'lastActualDate',            type : 'date',            dateFormat : 'Y-m-d',            convert : function(v, j) {                return v ? Ext4.Date.clearTime(new Date(v)) : null;            }        }, {            name : 'constraintType',            type : 'string'        }, {            name : 'finishByDate',            type : 'date',            dateFormat : 'Y-m-d',            convert : function(v, j) {                return v ? Ext4.Date.clearTime(new Date(v)) : null;            }        }, {            name : 'tipUnits',            type : 'string'        }, {            name : 'tipStartDate',            type : 'string'        }, {            name : 'tipEndDate',            type : 'string'        }, {            name : 'tipConstraintType',            type : 'string'        }, {            name : 'tipFinishByDate',            type : 'string'        }, {            name : 'isRollUp',            type : 'boolean',            defaultValue : false        }, {            name : 'isDelete',            type : 'boolean'        }, {            name : 'success',            type : 'boolean'        }, {            name : 'isDateDraggable',            type : 'boolean'        }, {            name : 'projectName',            type : 'string'        }, {            name : 'taskId',            type : 'int'        }    ],    getPTMResourceID : function() {        return this.getResourceId().split('~')[0];    },    getPTMProjectID : function() {        return this.getResourceId().split('~')[1];    },    getPTMTaskID : function() {        return this.getResourceId().split('~')[2];    }});Ext4.define('PSA.RA.Model.Settings', {    extend : 'Ext4.data.Model',    fields : [        {            name : 'id',            type : 'int'        }, {            name : 'owner',            type : 'int'        }, {            name : 'alertUser',            type : 'boolean'        }, {            name : 'selectedFilter',            type : 'int'        }, {            name : 'showNumbers',            type : 'boolean'        }, {            name : 'showHovers',            type : 'boolean'        },  {            name : 'availabilityColor1',            type : 'string'        }, {            name : 'availabilityColor2',            type : 'string'        }, {            name : 'availabilityColor3',            type : 'string'        }, {            name : 'chartDensity',            type : 'int'        }    ]});Ext4.define('PSA.RA.Model.DropDown', {    extend : 'Ext4.data.Model',    fields : [        {            name : 'id',            type : 'int',            defaultValue : 0        }, {            name : 'name',            type : 'string',            sortType : 'asUCText'        }    ]});Ext4.define('PSA.RA.Model.PageDropDown', {    extend : 'Ext4.data.Model',    fields : [        {            name : 'id',            type : 'int',            defaultValue : 0        }, {            name : 'name',            type : 'string'        }, {            name : 'start',            type : 'int'        }    ]});Ext4.define('PSA.RA.Model.SavedFilter', {    extend : 'PSA.RA.Model.DropDown',    fields : [        {            name : 'owner',            type : 'int'        }, {            name : 'filterName',            type : 'string'        }, {            name : 'includeInactive',            type : 'boolean'        }, {            name : 'shared',            type : 'boolean'        }, {            name : 'includeAllResources',            type : 'boolean'        }, {            name : 'assignees',            type : 'string'        }, {            name : 'customers',            type : 'string'        }, {            name : 'projects',            type : 'string'        }, {            name : 'projectTasks',            type : 'string'        }, {            name : 'parentTasks',            type : 'string'        }, {            name : 'taskDateOperator',            type : 'string'        }, {            name : 'taskDateValue1',            type : 'string'        }, {            name : 'taskDateValue2',            type : 'string'        }, {            name : 'assignDateOperator',            type : 'string'        }, {            name : 'assignDateValue1',            type : 'string'        }, {            name : 'assignDateValue2',            type : 'string'        }, {            name : 'clientId',            type : 'int'        }, {            name : 'isDelete',            type : 'boolean'        }, {            name : 'assigneeNames',            type : 'string'        }, {            name : 'customerNames',            type : 'string'        }, {            name : 'projectNames',            type : 'string'        }, {            name : 'projectTaskNames',            type : 'string'        }, {            name : 'parentTaskNames',            type : 'string'        }    ],    clientIdProperty : 'clientId'});Ext4.define('PSA.RA.Model.Permission', {    extend : 'Ext4.data.Model',    idProperty : 'name',    fields : [        {            name : 'name',            type : 'string'        }, {            name : 'allowed',            type : 'boolean'         }    ]});Ext4.define('PSA.RA.Model.WeekendLine', {    extend : 'Ext4.data.Model',    fields : [        {            name : 'Date',            type : 'date',            dateFormat : 'Y/m/d'        }, {            name : 'Text',            type : 'string'        }, {            name : 'Cls',            type : 'string'        }    ]});Ext4.define('PSA.RA.Model.ResourcePopup', {    extend : 'PSA.RA.Model.DropDown',    fields : [        {            name : 'id',            type : 'int'        }, {            name : 'name',            type : 'string'        }, {            name : 'details',            type : Ext4.data.Types.AUTO        }    ]});Ext4.define('PSA.RA.Model.LargeDataDropdownRange', {    extend : 'Ext4.data.Model',    fields : [        {            name : 'id',            type : 'int',            defaultValue: 0        }, {            name : 'startIndex',            type : 'int',            defaultValue: 0        }, {            name : 'endIndex',            type : 'int',            defaultValue: 0        }, {            name : 'name',            type : 'string'        }    ]});