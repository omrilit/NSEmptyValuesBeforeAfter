/** * Main client script * * Version  Date            Author      Remarks * 1.00     11/28/2013      pmiller     Initial version * 2.00     12/12/2013      jmarimla    Uncommented PSA.RA.AdvFilters * 3.00     12/26/2013      pbtan       set default value for savedFilter * 4.00     01/22/2014      pbtan       alert user when role has no permission. *                                      redirect page when no permission to view * 5.00     01/24/2014      pbtan       alert user when advanced projects is not enabled * 6.00     01/28/2014      pbtan       alert user about the changes from v2 to v3 on first load of the user. * 7.00     01/29/2014      pbtan       select and use last saved filter on load of the page. * 8.00     02/07/2014      pbtan       updated implementation of permission checking. * 9.00     02/10/2014      pmiller     Commented out console log * 10.00    05/05/2014      maquino     Added translation support * 11.00    06/19/2014      pmiller     Code will now only check required stores (and proceed with init) if permissionStore is loaded and account has passed permission check *                                      Permission check will still run only once */function init() {    try {        Ext4.tip.QuickTipManager.init();        var settings = PSA.RA.dataStores.settingStore;        var savedFilterStore = PSA.RA.dataStores.savedFilters;        var record = settings.getAt(0);        /*         * Update font immediately, necessary for positioning components during their initialization         */        var cssTool = Ext4.util.CSS;        var prop = getNSFontStyle();        cssTool.updateRule('#psa-menu *', 'font-family', prop);        cssTool.updateRule('#advFilterMain *', 'font-family', prop);        cssTool.updateRule('#PSA-RA-App *', 'font-family', prop);        cssTool.updateRule('#ra-allocation-hover *', 'font-family', prop);        cssTool.updateRule('.ra-form-window *', 'font-family', prop);        /*         * Instantiate the Menu & Filters         */        //Ext4.create('PSA.RA.Menu');        Ext4.create('PSA.RA.AdvFilters');        var savedFilters = Ext4.getCmp('savedFilters');        /*         * Load & apply last-used Filters         */        if (record == null) {            alert(translatedStrings.getText('MESSAGE.WARNING.NEW_UPDATE'));            record = Ext4.create('PSA.RA.Model.Settings');            record.set('owner', nlapiGetContext().user);            record.set('alertUser', true);            record.set('selectedFilter', 0);            settings.add(record);            settings.sync();            Ext4.getCmp('savedFilters').setValue(0);        } else {            var selectedFilter = parseInt(record.get('selectedFilter')) || 0;            var filterRecord = savedFilterStore.getById(selectedFilter);            //console.log('first load');            //console.log(filterRecord);            savedFilterStore.getLoadParameters(filterRecord, record);            savedFilters.setValue(filterRecord != null ? selectedFilter : 0);        }        PSA.RA.dataStores.chartResource.loadWithFilters();        /*         * Instantiate the Scheduler         */        PSA.RA.App = Ext4.create('PSA.RA.Scheduler');    } catch (e) {        console.log('UI Error : ' + e);    }}var sleep;var donePermissionCheck = false;function waitForStores() {    /*     * Check permissionStore before checking other required stores     */    if (PSA.RA.dataStores.permissionStore.isLoaded) {        /*         * Check permissions & features         */        if (!donePermissionCheck) {            console.log('PERMISSION CHECK: RUN ONCE');            donePermissionCheck = true;            var permission = PSA.RA.dataStores.permissionStore;            if (!permission.viewChart()) {                var features = permission.featureCheck();                if (features.length > 0) {                    //TODO: alert messages should not be translated if account has no file cabinet permissions -- but somehow, it works at the moment                    alert(translatedStrings.getText('MESSAGE.ERROR.REQUIRED_FEATURES1') + features.toString() + translatedStrings.getText('MESSAGE.ERROR.REQUIRED_FEATURES2'));                } else {                    alert(translatedStrings.getText('MESSAGE.ERROR.NO_VIEW_PERMISSION'));                }                clearTimeout(sleep);                window.location = '/app/center/card.nl?sc=-29';            } else if (!permission.editTask()) {                alert(translatedStrings.getText('MESSAGE.ERROR.NO_EDIT_PERMISSION'));            }        }        if (PSA.RA.dataStores.isLoaded()) {            console.log('READY');            clearTimeout(sleep);            init();        } else {            console.log('WAITING...');            sleep = setTimeout(waitForStores, 100);        }    } else {        console.log('CHECKING PERMISSIONS...');        sleep = setTimeout(waitForStores, 100);    }}Ext4.onReady(function() {    waitForStores();});