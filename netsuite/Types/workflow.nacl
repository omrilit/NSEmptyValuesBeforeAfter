type netsuite.workflow_workflowstates {
  "List<netsuite.workflow_workflowstates_workflowstate>" workflowstate {
  }
}
type netsuite.workflow_workflowstates_workflowstate {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string name {
    _required = true
  }
  string description {
  }
  boolean donotexitworkflow {
  }
  number positionx {
  }
  number positiony {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions>" workflowactions {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields workflowstatecustomfields {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowtransitions workflowtransitions {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowtransitions {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition>" workflowtransition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string tostate {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  netsuite.workflowtransition_triggertype triggertype {
  }
  string waitforworkflow {
  }
  string waitforworkflowstate {
  }
  string buttonaction {
  }
  string scheduledelay {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowtransitions_workflowtransition_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield>" workflowstatecustomfield {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.generic_customfield_fieldtype fieldtype {
    _required = true
  }
  string label {
    _required = true
    _restriction = {
      max_length = 200
    }
  }
  string selectrecordtype {
  }
  boolean applyformatting {
  }
  boolean defaultchecked {
  }
  string defaultselection {
  }
  string defaultvalue {
  }
  string description {
  }
  netsuite.generic_customfield_displaytype displaytype {
  }
  netsuite.generic_customfield_dynamicdefault dynamicdefault {
  }
  string help {
  }
  string linktext {
  }
  string minvalue {
  }
  string maxvalue {
  }
  boolean storevalue {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_customfieldfilters customfieldfilters {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_roleaccesses roleaccesses {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_roleaccesses {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_roleaccesses_roleaccess>" roleaccess {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_roleaccesses_roleaccess {
  string role {
    _required = true
  }
  netsuite.generic_accesslevel_searchlevel accesslevel {
    _required = true
  }
  netsuite.generic_accesslevel_searchlevel searchlevel {
    _required = true
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_customfieldfilters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_customfieldfilters_customfieldfilter>" customfieldfilter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowstatecustomfields_workflowstatecustomfield_customfieldfilters_customfieldfilter {
  string fldfilter {
    _required = true
  }
  boolean fldfilterchecked {
  }
  netsuite.generic_customfield_fldfiltercomparetype fldfiltercomparetype {
  }
  string fldfiltersel {
  }
  string fldfilterval {
  }
  boolean fldfilternotnull {
  }
  boolean fldfilternull {
  }
  string fldcomparefield {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions {
  netsuite.workflowaction_triggertype triggertype {
    _required = true
    isAttribute = true
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction>" addbuttonaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction>" confirmaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction>" createlineaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction>" createrecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction>" customaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction>" gotopageaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction>" gotorecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction>" initiateworkflowaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction>" lockrecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction>" removebuttonaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction>" returnusererroraction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction>" sendcampaignemailaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction>" sendemailaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction>" setdisplaylabelaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction>" setdisplaytypeaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction>" setfieldmandatoryaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction>" setfieldvalueaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction>" showmessageaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction>" subscribetorecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction>" transformrecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup>" workflowactiongroup {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup>" workflowsublistactiongroup {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflow_sublists sublist {
    _required = true
  }
  string scheduletimeofday {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction>" createrecordaction {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_initcondition initcondition {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction>" returnusererroraction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction>" sendemailaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction>" setfieldvalueaction {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflowaction_valuetype valuetype {
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  string valueselect {
  }
  string valuemultiselect {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_setfieldvalueaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflowaction_sendertype sendertype {
    _required = true
  }
  netsuite.workflowaction_recipienttype recipienttype {
    _required = true
  }
  string sender {
  }
  string senderfield {
  }
  string recipient {
  }
  string recipientemail {
  }
  string recipientfield {
  }
  netsuite.generic_standard_template template {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  string senderjoinfield {
  }
  string recipientjoinfield {
  }
  string recipientccemail {
  }
  string recipientbccemail {
  }
  boolean usetemplate {
  }
  string subject {
  }
  string body {
  }
  boolean includerecordlink {
  }
  netsuite.workflowaction_attachmenttype attachmenttype {
  }
  string attachmentfile {
  }
  string attachmentjoinfield {
  }
  netsuite.generic_standard_field attachmentfield {
  }
  boolean includetransaction {
  }
  netsuite.workflowaction_transtatementtype includeformat {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_sendemailaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string errortext {
    _required = true
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_returnusererroraction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  string resultfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_fieldsettings fieldsettings {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowsublistactiongroup_createrecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string scheduletimeofday {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_addbuttonaction>" addbuttonaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createlineaction>" createlineaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createrecordaction>" createrecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_customaction>" customaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotopageaction>" gotopageaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotorecordaction>" gotorecordaction {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initcondition initcondition {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initiateworkflowaction>" initiateworkflowaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_lockrecordaction>" lockrecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_removebuttonaction>" removebuttonaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_returnusererroraction>" returnusererroraction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_sendcampaignemailaction>" sendcampaignemailaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_sendemailaction>" sendemailaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setdisplaylabelaction>" setdisplaylabelaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setdisplaytypeaction>" setdisplaytypeaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setfieldmandatoryaction>" setfieldmandatoryaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setfieldvalueaction>" setfieldvalueaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_subscribetorecordaction>" subscribetorecordaction {
  }
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_transformrecordaction>" transformrecordaction {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_transformrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  boolean isinactive {
  }
  string resultfield {
  }
  boolean isredirectwithoutsaving {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_transformrecordaction_fieldsettings fieldsettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_transformrecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_transformrecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_transformrecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_subscribetorecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  boolean isinactive {
  }
  string recordfield {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setfieldvalueaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  boolean isinactive {
  }
  netsuite.workflowaction_valuetype valuetype {
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  string valueselect {
  }
  string valuemultiselect {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setfieldmandatoryaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflow_sublists sublist {
  }
  boolean isinactive {
  }
  boolean issublistfield {
  }
  boolean ismandatory {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setdisplaytypeaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflowaction_displaytype displaytype {
    _required = true
  }
  netsuite.workflow_sublists sublist {
  }
  boolean isinactive {
  }
  boolean issublistfield {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_setdisplaylabelaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflow_sublists sublist {
  }
  boolean isinactive {
  }
  boolean issublistfield {
  }
  string displaylabel {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_sendemailaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflowaction_sendertype sendertype {
    _required = true
  }
  netsuite.workflowaction_recipienttype recipienttype {
    _required = true
  }
  string sender {
  }
  string senderfield {
  }
  string recipient {
  }
  string recipientemail {
  }
  string recipientfield {
  }
  netsuite.generic_standard_template template {
  }
  boolean isinactive {
  }
  string senderjoinfield {
  }
  string recipientjoinfield {
  }
  string recipientccemail {
  }
  string recipientbccemail {
  }
  boolean usetemplate {
  }
  string subject {
  }
  string body {
  }
  boolean includerecordlink {
  }
  netsuite.workflowaction_attachmenttype attachmenttype {
  }
  string attachmentfile {
  }
  string attachmentjoinfield {
  }
  netsuite.generic_standard_field attachmentfield {
  }
  boolean includetransaction {
  }
  netsuite.workflowaction_transtatementtype includeformat {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_sendcampaignemailaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recipientfield {
  }
  boolean isinactive {
  }
  string resultfield {
  }
  boolean recipientiscurrentrecord {
  }
  string recipientjoinfield {
  }
  string campaignevent {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_returnusererroraction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string errortext {
    _required = true
  }
  boolean isinactive {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_removebuttonaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflowaction_buttonid buttonid {
    _required = true
  }
  boolean isinactive {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_lockrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  boolean isinactive {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initiateworkflowaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string initiatedworkflow {
    _required = true
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initiateworkflowaction_workflowfieldsettings workflowfieldsettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initiateworkflowaction_workflowfieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initiateworkflowaction_workflowfieldsettings_workflowfieldsetting>" workflowfieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initiateworkflowaction_workflowfieldsettings_workflowfieldsetting {
  string targetworkflowfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotorecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  boolean isinactive {
  }
  string recordidfield {
  }
  string recordidjoinfield {
  }
  boolean ineditmode {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotorecordaction_fieldsettings fieldsettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotorecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotorecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotorecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_gotopageaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.generic_standard_task targetpage {
  }
  string targetpageobject {
  }
  netsuite.centercategory_tasktype targetpagetasktype {
  }
  boolean isinactive {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_customaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string scripttype {
    _required = true
  }
  boolean isinactive {
  }
  string resultfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_customaction_parametersettings parametersettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_customaction_parametersettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_customaction_parametersettings_parametersetting>" parametersetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_customaction_parametersettings_parametersetting {
  string targetparameter {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  boolean isinactive {
  }
  string resultfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createrecordaction_fieldsettings fieldsettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createrecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createrecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createrecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createlineaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflow_sublists sublist {
    _required = true
  }
  boolean isinactive {
  }
  netsuite.workflowaction_createline_position position {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createlineaction_fieldsettings fieldsettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createlineaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createlineaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_createlineaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_workflowactiongroup_addbuttonaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string label {
    _required = true
  }
  boolean isinactive {
  }
  boolean saverecordfirst {
  }
  boolean checkconditionbeforeexecution {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  string resultfield {
  }
  boolean isredirectwithoutsaving {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_fieldsettings fieldsettings {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_transformrecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  string recordfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_subscribetorecordaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string messagetext {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_showmessageaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  netsuite.workflowaction_valuetype valuetype {
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  string valueselect {
  }
  string valuemultiselect {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldvalueaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  netsuite.workflow_sublists sublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  boolean issublistfield {
  }
  boolean ismandatory {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setfieldmandatoryaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflowaction_displaytype displaytype {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  netsuite.workflow_sublists sublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  boolean issublistfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaytypeaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string field {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  netsuite.workflow_sublists sublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  boolean issublistfield {
  }
  string displaylabel {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_setdisplaylabelaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflowaction_sendertype sendertype {
    _required = true
  }
  netsuite.workflowaction_recipienttype recipienttype {
    _required = true
  }
  string sender {
  }
  string senderfield {
  }
  string recipient {
  }
  string recipientemail {
  }
  string recipientfield {
  }
  netsuite.generic_standard_template template {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  string senderjoinfield {
  }
  string recipientjoinfield {
  }
  string recipientccemail {
  }
  string recipientbccemail {
  }
  boolean usetemplate {
  }
  string subject {
  }
  string body {
  }
  boolean includerecordlink {
  }
  netsuite.workflowaction_attachmenttype attachmenttype {
  }
  string attachmentfile {
  }
  string attachmentjoinfield {
  }
  netsuite.generic_standard_field attachmentfield {
  }
  boolean includetransaction {
  }
  netsuite.workflowaction_transtatementtype includeformat {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendemailaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recipientfield {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  string resultfield {
  }
  boolean recipientiscurrentrecord {
  }
  string recipientjoinfield {
  }
  string campaignevent {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_sendcampaignemailaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string errortext {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_returnusererroraction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflowaction_buttonid buttonid {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_removebuttonaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_lockrecordaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string initiatedworkflow {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_initcondition initcondition {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_workflowfieldsettings workflowfieldsettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_workflowfieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_workflowfieldsettings_workflowfieldsetting>" workflowfieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_workflowfieldsettings_workflowfieldsetting {
  string targetworkflowfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_initiateworkflowaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  string recordidfield {
  }
  string recordidjoinfield {
  }
  boolean ineditmode {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_fieldsettings fieldsettings {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotorecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.generic_standard_task targetpage {
  }
  string targetpageobject {
  }
  netsuite.centercategory_tasktype targetpagetasktype {
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_gotopageaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string scripttype {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  string resultfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_initcondition initcondition {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_parametersettings parametersettings {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_parametersettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_parametersettings_parametersetting>" parametersetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_parametersettings_parametersetting {
  string targetparameter {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_customaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string recordtype {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  number scheduledelay {
  }
  string scheduletimeofday {
  }
  number schedulerecurrence {
  }
  netsuite.workflow_timeunit scheduletimeunit {
  }
  netsuite.workflowaction_radioschedulemode schedulemode {
  }
  boolean isinactive {
  }
  string resultfield {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_fieldsettings fieldsettings {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createrecordaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.workflow_sublists sublist {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflowaction_createline_position position {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_fieldsettings fieldsettings {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_fieldsettings {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_fieldsettings_fieldsetting>" fieldsetting {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_createlineaction_fieldsettings_fieldsetting {
  string targetfield {
    _required = true
  }
  string valuetext {
  }
  boolean valuechecked {
  }
  netsuite.workflowaction_valuedate valuedate {
  }
  string valueselect {
  }
  string valuejoinfield {
  }
  string valuefield {
  }
  string valueformula {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string messagetext {
    _required = true
  }
  netsuite.workflow_sublists clienttriggerfieldssublist {
  }
  boolean clienttriggerfieldsissublistfield {
  }
  string clienttriggerfields {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_confirmaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  string label {
    _required = true
  }
  string eventtypes {
  }
  string contexttypes {
  }
  string conditionsavedsearch {
  }
  boolean isinactive {
  }
  boolean saverecordfirst {
  }
  boolean checkconditionbeforeexecution {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction_initcondition initcondition {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction_initcondition_parameters parameters {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction_initcondition_parameters {
  "List<netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_workflowstates_workflowstate_workflowactions_addbuttonaction_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow_workflowcustomfields {
  "List<netsuite.workflow_workflowcustomfields_workflowcustomfield>" workflowcustomfield {
  }
}
type netsuite.workflow_workflowcustomfields_workflowcustomfield {
  serviceid scriptid {
    _required = true
    isAttribute = true
  }
  netsuite.generic_customfield_fieldtype fieldtype {
    _required = true
  }
  string label {
    _required = true
    _restriction = {
      max_length = 200
    }
  }
  string selectrecordtype {
  }
  boolean applyformatting {
  }
  boolean defaultchecked {
  }
  string defaultselection {
  }
  string defaultvalue {
  }
  string description {
  }
  netsuite.generic_customfield_displaytype displaytype {
  }
  netsuite.generic_customfield_dynamicdefault dynamicdefault {
  }
  string help {
  }
  string linktext {
  }
  string minvalue {
  }
  string maxvalue {
  }
  boolean storevalue {
  }
  netsuite.workflow_workflowcustomfields_workflowcustomfield_customfieldfilters customfieldfilters {
  }
  netsuite.workflow_workflowcustomfields_workflowcustomfield_roleaccesses roleaccesses {
  }
}
type netsuite.workflow_workflowcustomfields_workflowcustomfield_roleaccesses {
  "List<netsuite.workflow_workflowcustomfields_workflowcustomfield_roleaccesses_roleaccess>" roleaccess {
  }
}
type netsuite.workflow_workflowcustomfields_workflowcustomfield_roleaccesses_roleaccess {
  string role {
    _required = true
  }
  netsuite.generic_accesslevel_searchlevel accesslevel {
    _required = true
  }
  netsuite.generic_accesslevel_searchlevel searchlevel {
    _required = true
  }
}
type netsuite.workflow_workflowcustomfields_workflowcustomfield_customfieldfilters {
  "List<netsuite.workflow_workflowcustomfields_workflowcustomfield_customfieldfilters_customfieldfilter>" customfieldfilter {
  }
}
type netsuite.workflow_workflowcustomfields_workflowcustomfield_customfieldfilters_customfieldfilter {
  string fldfilter {
    _required = true
  }
  boolean fldfilterchecked {
  }
  netsuite.generic_customfield_fldfiltercomparetype fldfiltercomparetype {
  }
  string fldfiltersel {
  }
  string fldfilterval {
  }
  boolean fldfilternotnull {
  }
  boolean fldfilternull {
  }
  string fldcomparefield {
  }
}
type netsuite.workflow_recurrence {
  netsuite.workflow_recurrence_daily daily {
  }
  netsuite.workflow_recurrence_every30minutes every30minutes {
  }
  netsuite.workflow_recurrence_everyweekday everyweekday {
  }
  netsuite.workflow_recurrence_monthly monthly {
  }
  netsuite.workflow_recurrence_monthlydayofweek monthlydayofweek {
  }
  netsuite.workflow_recurrence_single single {
  }
  netsuite.workflow_recurrence_weekly weekly {
  }
  netsuite.workflow_recurrence_yearly yearly {
  }
  netsuite.workflow_recurrence_yearlydayofweek yearlydayofweek {
  }
}
type netsuite.workflow_recurrence_yearlydayofweek {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  netsuite.generic_order_of_week orderofweek {
    _required = true
  }
  netsuite.generic_day_of_week dayofweek {
    _required = true
  }
  netsuite.generic_month month {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_yearly {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  netsuite.generic_month month {
    _required = true
  }
  netsuite.generic_day_of_month dayofmonth {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_weekly {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  number everyxweeks {
    _required = true
  }
  boolean sunday {
    _required = true
  }
  boolean monday {
    _required = true
  }
  boolean tuesday {
    _required = true
  }
  boolean wednesday {
    _required = true
  }
  boolean thursday {
    _required = true
  }
  boolean friday {
    _required = true
  }
  boolean saturday {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_single {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
}
type netsuite.workflow_recurrence_monthlydayofweek {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  netsuite.workflow_order_of_week orderofweek {
    _required = true
  }
  netsuite.generic_day_of_week dayofweek {
    _required = true
  }
  number everyxmonths {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_monthly {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  netsuite.generic_day_of_month dayofmonth {
    _required = true
  }
  number everyxmonths {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_everyweekday {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_every30minutes {
  string startdate {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_recurrence_daily {
  string startdate {
    _required = true
  }
  string starttime {
    _required = true
  }
  number everyxdays {
    _required = true
  }
  string enddate {
  }
}
type netsuite.workflow_initcondition {
  netsuite.workflow_condition_type type {
    _required = true
  }
  netsuite.cdata formula {
  }
  netsuite.workflow_initcondition_parameters parameters {
  }
}
type netsuite.workflow_initcondition_parameters {
  "List<netsuite.workflow_initcondition_parameters_parameter>" parameter {
  }
}
type netsuite.workflow_initcondition_parameters_parameter {
  string name {
    _required = true
  }
  string value {
    _required = true
  }
  string selectrecordtype {
  }
}
type netsuite.workflow {
  serviceid scriptid {
    _required = true
    isAttribute = true
    _restriction = {
      regex = "^customworkflow[0-9a-z_]+"
    }
  }
  string name {
    _required = true
  }
  string recordtypes {
    _required = true
  }
  string description {
  }
  string initcontexts {
  }
  string initeventtypes {
  }
  string initsavedsearchcondition {
  }
  string initsavedsearchfilter {
  }
  netsuite.workflow_triggertype inittriggertype {
  }
  boolean initoncreate {
  }
  boolean initonvieworupdate {
  }
  string initlocalizationcontext {
  }
  boolean isinactive {
  }
  boolean islogenabled {
  }
  netsuite.workflow_releasestatus releasestatus {
  }
  boolean runasadmin {
  }
  netsuite.workflow_keephistory keephistory {
  }
  netsuite.workflow_initcondition initcondition {
  }
  netsuite.workflow_recurrence recurrence {
  }
  netsuite.workflow_workflowcustomfields workflowcustomfields {
  }
  netsuite.workflow_workflowstates workflowstates {
  }
  string _lastfetchtime {
    _hidden_value = true
  }
}
